{"ast":null,"code":"import * as SV from \"../SortVisualizer/SortVisualizer.js\";\nexport function quickSort(array, start, end, visuals) {\n  if (start >= end) return;\n  var pIndex = partition(array, start, end, visuals);\n  quickSort(array, start, pIndex - 1, visuals);\n  quickSort(array, pIndex + 1, end, visuals);\n}\n\nfunction partition(array, start, end, visuals) {\n  var pivot = array[end];\n  var pIndex = start;\n  visuals.push([end, end, \"p\"]);\n  visuals.push([end, end, \"r\"]);\n\n  for (let i = start; i < end; i++) {\n    visuals.push([i, pIndex, \"v\"]);\n    visuals.push([i, pIndex, \"r\"]);\n\n    if (array[i] < pivot) {\n      visuals.push([i, array[pIndex], \"s\"]);\n      visuals.push([pIndex, array[i], \"s\"]);\n      let temp = array[i];\n      array[i] = array[pIndex];\n      array[pIndex] = temp;\n      pIndex++;\n    }\n  }\n\n  visuals.push([pIndex, end, \"v\"]);\n  visuals.push([pIndex, end, \"r\"]);\n  visuals.push([pIndex, array[end], \"s\"]);\n  visuals.push([end, array[pIndex], \"s\"]);\n  var temp = array[pIndex];\n  array[pIndex] = array[end];\n  array[end] = temp;\n  return pIndex;\n}\n\nexport function performVisualization(array) {\n  const promises = [];\n  var visuals = [];\n  quickSort(array, 0, array.length - 1, visuals);\n  var arrayBars = document.getElementsByClassName(\"arrayBar\");\n\n  for (let i = 0; i < visuals.length; i++) {\n    var key = visuals[i][2];\n    var changeColour = key === \"v\" || key === \"r\" || key === \"p\";\n\n    if (changeColour) {\n      var barOneIndex = visuals[i][0];\n      var barTwoIndex = visuals[i][1];\n      const barOneStyle = arrayBars[barOneIndex].style;\n      const barTwoStyle = arrayBars[barTwoIndex].style;\n      let colour;\n      if (key === \"v\") colour = SV.HIGHLIGHT_COLOUR;\n      if (key === \"r\") colour = SV.MAIN_COLOUR;\n      if (key === \"p\") colour = SV.SPECIAL_HIGHLIGHT;\n      promises.push(new Promise(resolve => {\n        setTimeout(() => {\n          barOneStyle.backgroundColor = colour;\n          barTwoStyle.backgroundColor = colour;\n          resolve();\n        }, i * SV.ANIMATION_SPEED_MS);\n      }));\n    } else {\n      promises.push(new Promise(resolve => {\n        setTimeout(() => {\n          var barOneIndex = visuals[i][0];\n          var newHeight = visuals[i][1];\n          var barOneStyle = arrayBars[barOneIndex].style;\n          barOneStyle.height = `${newHeight / (SV.MAX_ARRAY_VALUE / 100)}%`;\n          resolve();\n        }, i * SV.ANIMATION_SPEED_MS);\n      }));\n    }\n  }\n\n  return Promise.all(promises);\n}","map":{"version":3,"sources":["C:/Users/emir_/Desktop/SightSort-master/src/SortingAlgorithms/quickSort.js"],"names":["SV","quickSort","array","start","end","visuals","pIndex","partition","pivot","push","i","temp","performVisualization","promises","length","arrayBars","document","getElementsByClassName","key","changeColour","barOneIndex","barTwoIndex","barOneStyle","style","barTwoStyle","colour","HIGHLIGHT_COLOUR","MAIN_COLOUR","SPECIAL_HIGHLIGHT","Promise","resolve","setTimeout","backgroundColor","ANIMATION_SPEED_MS","newHeight","height","MAX_ARRAY_VALUE","all"],"mappings":"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","sourcesContent":["import * as SV from \"../SortVisualizer/SortVisualizer.js\";\n\nexport function quickSort(array, start, end, visuals) {\n  if (start >= end) return;\n  var pIndex = partition(array, start, end, visuals);\n  quickSort(array, start, pIndex - 1, visuals);\n  quickSort(array, pIndex + 1, end, visuals);\n}\n\nfunction partition(array, start, end, visuals) {\n  var pivot = array[end];\n  var pIndex = start;\n  visuals.push([end, end, \"p\"]);\n  visuals.push([end, end, \"r\"]);\n  for (let i = start; i < end; i++) {\n    visuals.push([i, pIndex, \"v\"]);\n    visuals.push([i, pIndex, \"r\"]);\n    if (array[i] < pivot) {\n      visuals.push([i, array[pIndex], \"s\"]);\n      visuals.push([pIndex, array[i], \"s\"]);\n      let temp = array[i];\n      array[i] = array[pIndex];\n      array[pIndex] = temp;\n      pIndex++;\n    }\n  }\n  visuals.push([pIndex, end, \"v\"]);\n  visuals.push([pIndex, end, \"r\"]);\n  visuals.push([pIndex, array[end], \"s\"]);\n  visuals.push([end, array[pIndex], \"s\"]);\n  var temp = array[pIndex];\n  array[pIndex] = array[end];\n  array[end] = temp;\n  return pIndex;\n}\n\nexport function performVisualization(array) {\n  const promises = [];\n  var visuals = [];\n  quickSort(array, 0, array.length - 1, visuals);\n  var arrayBars = document.getElementsByClassName(\"arrayBar\");\n  for (let i = 0; i < visuals.length; i++) {\n    var key = visuals[i][2];\n    var changeColour = key === \"v\" || key === \"r\" || key === \"p\";\n    if (changeColour) {\n      var barOneIndex = visuals[i][0];\n      var barTwoIndex = visuals[i][1];\n      const barOneStyle = arrayBars[barOneIndex].style;\n      const barTwoStyle = arrayBars[barTwoIndex].style;\n      let colour;\n      if (key === \"v\") colour = SV.HIGHLIGHT_COLOUR;\n      if (key === \"r\") colour = SV.MAIN_COLOUR;\n      if (key === \"p\") colour = SV.SPECIAL_HIGHLIGHT;\n      promises.push(\n        new Promise(resolve => {\n          setTimeout(() => {\n            barOneStyle.backgroundColor = colour;\n            barTwoStyle.backgroundColor = colour;\n            resolve();\n          }, i * SV.ANIMATION_SPEED_MS);\n        })\n      );\n    } else {\n      promises.push(\n        new Promise(resolve => {\n          setTimeout(() => {\n            var barOneIndex = visuals[i][0];\n            var newHeight = visuals[i][1];\n            var barOneStyle = arrayBars[barOneIndex].style;\n            barOneStyle.height = `${newHeight / (SV.MAX_ARRAY_VALUE / 100)}%`;\n            resolve();\n          }, i * SV.ANIMATION_SPEED_MS);\n        })\n      );\n    }\n  }\n  return Promise.all(promises);\n}\n"]},"metadata":{},"sourceType":"module"}