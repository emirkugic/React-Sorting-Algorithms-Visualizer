{"ast":null,"code":"import * as SV from \"../SortVisualizer/SortVisualizer.js\";\nexport function insertionSort(array, visuals) {\n  for (let step = 1; step < array.length; step++) {\n    var key = array[step];\n    visuals.push([step, step, \"k\"]);\n    visuals.push([step, step, \"r\"]);\n    var j = step - 1;\n\n    while (j >= 0 && key < array[j]) {\n      visuals.push([j, j + 1, \"v\"]);\n      visuals.push([j, j + 1, \"r\"]);\n      visuals.push([j + 1, array[j], \"s\"]);\n      visuals.push([j, key, \"s\"]);\n      array[j + 1] = array[j];\n      j--;\n    }\n\n    visuals.push([j + 1, key, \"s\"]);\n    array[j + 1] = key;\n  }\n}\nexport function performVisualization(array) {\n  const promises = [];\n  var visuals = [];\n  insertionSort(array, visuals);\n  var arrayBars = document.getElementsByClassName(\"arrayBar\");\n\n  for (let i = 0; i < visuals.length; i++) {\n    var key = visuals[i][2];\n    var changeColour = key === \"v\" || key === \"r\" || key === \"k\";\n\n    if (changeColour) {\n      var barOneIndex = visuals[i][0];\n      var barTwoIndex = visuals[i][1];\n      const barOneStyle = arrayBars[barOneIndex].style;\n      const barTwoStyle = arrayBars[barTwoIndex].style;\n      let colour;\n      if (key === \"v\") colour = SV.HIGHLIGHT_COLOUR;\n      if (key === \"r\") colour = SV.MAIN_COLOUR;\n      if (key === \"k\") colour = SV.SPECIAL_HIGHLIGHT;\n      promises.push(new Promise(resolve => {\n        setTimeout(() => {\n          barOneStyle.backgroundColor = colour;\n          barTwoStyle.backgroundColor = colour;\n          resolve();\n        }, i * SV.ANIMATION_SPEED_MS);\n      }));\n    } else {\n      promises.push(new Promise(resolve => {\n        setTimeout(() => {\n          var barOneIndex = visuals[i][0];\n          var newHeight = visuals[i][1];\n          var barOneStyle = arrayBars[barOneIndex].style;\n          barOneStyle.height = `${newHeight / (SV.MAX_ARRAY_VALUE / 100)}%`;\n          resolve();\n        }, i * SV.ANIMATION_SPEED_MS);\n      }));\n    }\n  }\n\n  return Promise.all(promises);\n}","map":{"version":3,"sources":["C:/Users/emir_/Desktop/SightSort-master/src/SortingAlgorithms/insertionSort.js"],"names":["SV","insertionSort","array","visuals","step","length","key","push","j","performVisualization","promises","arrayBars","document","getElementsByClassName","i","changeColour","barOneIndex","barTwoIndex","barOneStyle","style","barTwoStyle","colour","HIGHLIGHT_COLOUR","MAIN_COLOUR","SPECIAL_HIGHLIGHT","Promise","resolve","setTimeout","backgroundColor","ANIMATION_SPEED_MS","newHeight","height","MAX_ARRAY_VALUE","all"],"mappings":"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","sourcesContent":["import * as SV from \"../SortVisualizer/SortVisualizer.js\";\n\nexport function insertionSort(array, visuals) {\n  for (let step = 1; step < array.length; step++) {\n    var key = array[step];\n    visuals.push([step, step, \"k\"]);\n    visuals.push([step, step, \"r\"]);\n    var j = step - 1;\n    while (j >= 0 && key < array[j]) {\n      visuals.push([j, j + 1, \"v\"]);\n      visuals.push([j, j + 1, \"r\"]);\n      visuals.push([j + 1, array[j], \"s\"]);\n      visuals.push([j, key, \"s\"]);\n      array[j + 1] = array[j];\n      j--;\n    }\n    visuals.push([j + 1, key, \"s\"]);\n    array[j + 1] = key;\n  }\n}\n\nexport function performVisualization(array) {\n  const promises = [];\n  var visuals = [];\n  insertionSort(array, visuals);\n  var arrayBars = document.getElementsByClassName(\"arrayBar\");\n  for (let i = 0; i < visuals.length; i++) {\n    var key = visuals[i][2];\n    var changeColour = key === \"v\" || key === \"r\" || key === \"k\";\n    if (changeColour) {\n      var barOneIndex = visuals[i][0];\n      var barTwoIndex = visuals[i][1];\n      const barOneStyle = arrayBars[barOneIndex].style;\n      const barTwoStyle = arrayBars[barTwoIndex].style;\n      let colour;\n      if (key === \"v\") colour = SV.HIGHLIGHT_COLOUR;\n      if (key === \"r\") colour = SV.MAIN_COLOUR;\n      if (key === \"k\") colour = SV.SPECIAL_HIGHLIGHT;\n      promises.push(\n        new Promise(resolve => {\n          setTimeout(() => {\n            barOneStyle.backgroundColor = colour;\n            barTwoStyle.backgroundColor = colour;\n            resolve();\n          }, i * SV.ANIMATION_SPEED_MS);\n        })\n      );\n    } else {\n      promises.push(\n        new Promise(resolve => {\n          setTimeout(() => {\n            var barOneIndex = visuals[i][0];\n            var newHeight = visuals[i][1];\n            var barOneStyle = arrayBars[barOneIndex].style;\n            barOneStyle.height = `${newHeight / (SV.MAX_ARRAY_VALUE / 100)}%`;\n            resolve();\n          }, i * SV.ANIMATION_SPEED_MS);\n        })\n      );\n    }\n  }\n  return Promise.all(promises);\n}\n"]},"metadata":{},"sourceType":"module"}